#!/bin/bash
name="ProScreencpy"		#TODO file name

### I'm not super sure how good bash is wit Fuctional programming 
### With external programs it works awesome.
### These functions are iterative not functional
### Take no arguments, return nothing
### Usually just print something and return 0 if ran cleanly

title (){
	echo "-----------------------------------------------"
	echo "Hello and Welcome to $name (one of my scripts.)"
	echo "_______________________________________________"
	return 0
} 				
				
erase (){
	### This doesn't work yet
	### I bet I just have to change the character r to whatever 
	### it takes to delete a line
	for (( i=0; i<100; i++ ));
	do
		echo -en "\r"
	done
	return 0
	}

loading_spinner (){
	chars="12345"
	for (( i=0; i<${#chars}; i++ )); 
	do
		sleep 0.25
		echo -en "${chars:$i:1}" "\r"
	done
	return 0
}
title 				#TODO I don't understand functions in bash yet
erase         #TODO This literally does nothing but it should erase. IDK WHY
loading_spinner			#This works!?

if adb shell echo "Connecting to device"
then
	flags=" -S -K"
	pkill sndcpy
	hostx=1080		#TODO same as aboved so the phone stays in portrait mode
	hosty=1920		#TODO calculate based on Hosts dimensions
	fps=25		        #TODO I think I'll set this to half as much as the hosts
	bitrate=1600000		#TODO This should be based on the quality of the connection
	dpi=440		        #TODO Decide what looks best.
	
	fullscreen=true		#TODO based on how the script is launched
	if $fullscreen
	then
		flags="$flags -f"
		size="$hostx""x""$hosty"
	else
		size="reset"
	fi

	flags="$flags -m $hostx -b $bitrate"
else
	echo "Didn't connect!"
fi
echo "Setting up device"
adb shell wm size reset
adb shell wm density reset
adb shell wm size $size
adb shell wm density $dpi
echo "running sdcpy and scrcpy with automatic flags:$flags"
for (( i=0; i<${#chars}; i++ ));
do
	sleep 0.25
	echo -en "${chars:$i:1}" "\r"
done

	sndcpy&
	scrcpy $flags

	echo """cleaning up"""
	adb shell wm size reset
	adb shell wm density reset
	pkill sndcpy
	echo "ctr+c to quit or wait to reconnect"
	for (( i=0; i<${#chars}; i++ ));
		do
			sleep 0.5
			echo -en "${chars:$i:1}" "\r"
done
    echo "Disconnected"

echo	"----------------------------------------"
echo 	" Good bye! I hope you liked this script."
echo	"________________________________________"
echo 	" Edit freely. Edit carefully. Edit Love."
echo	" Questions @ scripts@awesomehaircut.xyz."
echo	"                                        "
echo	"________________________________________"

